import pygame
import random

# Initialize Pygame
pygame.init()

# Set up colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)

# Set up the display
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Chanceopolis")

# Load background image
background = pygame.image.load("city_background.jpg")
background = pygame.transform.scale(background, (WIDTH, HEIGHT))

# Set up fonts
font = pygame.font.Font(None, 36)

class Player:
    def __init__(self, name, currency):
        self.name = name
        self.currency = currency
        self.position = 0
        self.properties = []

    def display_properties(self):
        if self.properties:
            print(f"{self.name}'s properties:")
            for prop in self.properties:
                print(prop)
        else:
            print(f"{self.name} doesn't own any properties.")

class Property:
    def __init__(self, name, value, rent):
        self.name = name
        self.value = value
        self.rent = rent

class ChanceopolisGame:
    def __init__(self, players):
        self.players = players
        self.num_players = len(players)
        self.board_size = 20
        self.event_spaces = {3: "Investment opportunity", 7: "Business venture", 11: "Unexpected expense", 15: "Legal trouble"}
        self.property_values = {"Mansion": 100, "Apartment Complex": 50, "Restaurant": 30}
        self.property_rents = {"Mansion": 20, "Apartment Complex": 15, "Restaurant": 10}
        self.event_cards = ["Opportunity knocks! Gain 50 currency.", "Misfortune strikes! Lose 30 currency.", "You found a treasure! Gain 100 currency."]
        self.card_probabilities = [0.4, 0.3, 0.3]

    def roll_dice(self):
        return random.randint(1, 6)

    def move_player(self, player, steps):
        player.position = (player.position + steps) % self.board_size

    def draw_event_card(self):
        return random.choices(self.event_cards, self.card_probabilities)[0]

    def handle_event(self, player):
        event = self.draw_event_card()
        print(f"{player.name} drew an event card: {event}")
        if "Gain" in event:
            player.currency += int(event.split()[2])
        elif "Lose" in event:
            player.currency -= int(event.split()[2])

    def buy_property(self, player):
        prop_name = input("Enter the name of the property you want to buy: ")
        if prop_name in self.property_values:
            property = Property(prop_name, self.property_values[prop_name], self.property_rents[prop_name])
            player.properties.append(property)
            player.currency -= property.value
            print(f"{player.name} bought {prop_name} for {property.value} currency.")
        else:
            print("Invalid property name.")

    def play_turn(self, player):
        print(f"It's {player.name}'s turn.")
        input("Press Enter to roll the dice...")
        steps = self.roll_dice()
        print(f"{player.name} rolled a {steps}.")
        self.move_player(player, steps)
        if player.position in self.event_spaces:
            print(f"{player.name} landed on {self.event_spaces[player.position]}!")
            if player.position == 3:
                self.buy_property(player)
            else:
                self.handle_event(player)

    def play(self):
        print("Welcome to Chanceopolis!")
        while True:
            for player in self.players:
                self.play_turn(player)
                player.display_properties()

if __name__ == "__main__":
    num_players = 8
    players = [Player(f"Player {i+1}", 100) for i in range(num_players)]
    game = ChanceopolisGame(players)
    game.play()
